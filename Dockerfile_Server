# ------------------------------------------------------------------------------
# Cargo Build Stage
# ------------------------------------------------------------------------------
FROM rustlang/rust:nightly as build

# create a new empty shell project
RUN USER=root cargo new --bin measurement_server
WORKDIR /

# copy over your manifests
COPY measurement_server/Cargo.lock measurement_server/Cargo.lock
COPY measurement_server/Cargo.toml measurement_server/Cargo.toml
COPY measurement_server/Rocket.toml measurement_server/Rocket.toml

COPY measurement_shared_rust/Cargo.lock measurement_shared_rust/Cargo.lock
COPY measurement_shared_rust/Cargo.toml measurement_shared_rust/Cargo.toml
COPY measurement_shared_rust/src measurement_shared_rust/src

WORKDIR /measurement_server

RUN cargo build --release
RUN rm src/*.rs

WORKDIR /

# copy your source tree
COPY measurement_server/src measurement_server/src

# build for release
RUN rm measurement_server/target/release/deps/measurement_service*

WORKDIR /measurement_server
RUN RUSTFLAGS="--emit=asm" cargo build --release

# ------------------------------------------------------------------------------
# Final Stage
# ------------------------------------------------------------------------------
FROM rustlang/rust:nightly-slim

# install ip route so client can execute the ip a statement
RUN apt-get update
RUN apt-get install -y iproute2

# copy the build artifact from the build stage
COPY --from=build /measurement_server/target/release/measurement_service .
COPY --from=build /measurement_server/Rocket.toml Rocket.toml

# set the startup command to run your binary
CMD ["./measurement_service"]